# NGINX Configuration for OpenESPI Authorization Server
# Development and testing environment

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging Configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    log_format espi_access '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          '"$http_x_forwarded_for" "$http_x_espi_client_id" '
                          'rt=$request_time';

    access_log /var/log/nginx/access.log main;

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=auth:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=50r/m;

    # Connection Limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Upstream Configuration
    upstream authserver {
        server authserver:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream authserver_management {
        server authserver:8081 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    # Default Server (handles unknown hosts)
    server {
        listen 80 default_server;
        server_name _;
        return 444;
    }

    # Main Server Configuration
    server {
        listen 80;
        server_name localhost espi-authserver;
        
        # Security Headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header X-Download-Options "noopen" always;
        add_header X-Permitted-Cross-Domain-Policies "none" always;

        # ESPI Specific Headers
        add_header X-ESPI-Version "4.0" always;
        add_header X-Server-Environment "docker" always;

        # Connection and Request Limits
        limit_conn addr 10;
        client_max_body_size 10M;
        client_body_timeout 10s;
        client_header_timeout 10s;

        # Health Check Endpoint (bypass auth)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # OAuth2 Authorization Endpoints (with rate limiting)
        location /oauth2/ {
            limit_req zone=auth burst=20 nodelay;
            
            proxy_pass http://authserver;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # OIDC Endpoints (with rate limiting)
        location /.well-known/ {
            limit_req zone=general burst=50 nodelay;
            
            proxy_pass http://authserver;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Enable caching for OIDC discovery
            proxy_cache_valid 200 10m;
            add_header X-Cache-Status $upstream_cache_status;
        }

        # UserInfo Endpoint
        location /userinfo {
            limit_req zone=api burst=100 nodelay;
            
            proxy_pass http://authserver;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
        }

        # API Endpoints (with rate limiting)
        location /api/ {
            limit_req zone=api burst=200 nodelay;
            
            proxy_pass http://authserver;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            
            # API-specific headers
            proxy_set_header Content-Type $content_type;
            proxy_set_header Accept $http_accept;
        }

        # Consent and Login Pages
        location ~ ^/(consent|login) {
            limit_req zone=general burst=30 nodelay;
            
            proxy_pass http://authserver;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static Assets
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://authserver;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            
            # Enable caching for static assets
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status $upstream_cache_status;
        }

        # Default Application Routes
        location / {
            limit_req zone=general burst=50 nodelay;
            
            proxy_pass http://authserver;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Deny access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ \.(sql|conf|env)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # Management Server (restricted access)
    server {
        listen 8081;
        server_name localhost;
        
        # Allow only internal networks
        allow 172.16.0.0/12;
        allow 10.0.0.0/8;
        allow 192.168.0.0/16;
        allow 127.0.0.1;
        deny all;

        # Management Endpoints
        location /actuator/ {
            proxy_pass http://authserver_management;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Prometheus Metrics
        location /actuator/prometheus {
            proxy_pass http://authserver_management;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        # Health Checks
        location /actuator/health {
            proxy_pass http://authserver_management;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            access_log off;
        }

        # Default deny
        location / {
            return 404;
        }
    }
}